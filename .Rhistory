teste <- c()
it_g <-c()
bd_g <-c()
thrConf_g<-c()
nr_added_exs_g<-c()
tx_g <- c()
acc_g <- c()
bd <- c()
tx <- c()
teste<-c()
teste2<-c()
source('C:/local_R/projeto_karliane/selftrain_modificado2/configuracoes.R')
# source('~/R/karliane/projeto_karliane/nayves_bayes/configuracoes.R')
source('C:/local_R/projeto_karliane/selftrain_modificado2/funcoes.R')
# source('~/R/karliane/projeto_karliane/nayves_bayes/funcoes.R')
t<-1
k<-1
i<-2
j<-1
it_g <-c()
bd_g <-c()
thrConf_g<-c()
nr_added_exs_g<-c()
tx_g <- c()
acc_g <- c()
bd <- c()
tx <- c()
taxa <- j*5
source('C:/local_R/projeto_karliane/selftrain_modificado2/carrega_dados.R')
source('C:/local_R/projeto_karliane/selftrain_modificado2/organiza_dados.R')
form = as.formula(paste(classe,'~', '.'))
data = base_treino_self_training
learner = learner("naiveBayes", list())
predFunc = 'f'
thrConf=0.9
maxIts=10
percFull=1
verbose=F
N <- NROW(data)
N_instancias_por_classe <- ddply(data,~class,summarise,number_of_distinct_orders=length(class))
N_classes <- NROW(N_instancias_por_classe)-1 # uso do -1 pq N_instancias_por_classe tem uma linha com a quantidade de exemplos nÃ£o rotulados
it <- 0
soma_Conf <- 0
qtd_Exemplos_Rot <- 0
totalrot <- 0
conj_treino <- c()
sup <- which(!is.na(data[,as.character(form[[2]])])) #sup recebe o indice de todos os exemplos rotulados
id_conj_treino <- c()
id_conj_treino_antigo <- c()
it <- it+1
it
soma_Conf <- 0
qtd_Exemplos_Rot <- 0
model <- runLearner(learner,form,data[sup,])
probPreds <- do.call(predFunc,list(model,data[-sup,]))
new <- which(probPreds[,2] >= thrConf)
probPreds
probPreds
