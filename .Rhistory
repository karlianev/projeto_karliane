source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/scripts_comuns/organiza_dados.R')
form = as.formula(paste(classe,'~', '.'))
data = base_treino_self_training
learner = learner("naiveBayes", list())
predFunc = 'f'
thrConf=0.9
maxIts=10
percFull=1
verbose=F
data
N <- NROW(data)
N_instancias_por_classe <- ddply(data,~class,summarise,number_of_distinct_orders=length(class))
N_classes <- NROW(N_instancias_por_classe)-1 # uso do -1 pq N_instancias_por_classe tem uma linha com a quantidade de exemplos não rotulados
it <- 0
soma_Conf <- 0
qtd_Exemplos_Rot <- 0
totalrot <- 0
conj_treino <- c()
sup <- which(!is.na(data[,as.character(form[[2]])])) #sup recebe o indice de todos os exemplos rotulados
id_conj_treino <- c()
id_conj_treino_antigo <- c()
it <- it+1
if ((it>1)&&(qtd_Exemplos_Rot>0)){
#      N_instancias_por_classe2 <- ddply(data[new,],~class,summarise,number_of_distinct_orders=length(class))
N_instancias_por_classe2 <- ddply(data[id_conj_treino,],~class,summarise,number_of_distinct_orders=length(class))
treino_valido <- FALSE
# teste <<- N_c
for (x in 1:nrow(N_instancias_por_classe2)){
if (N_instancias_por_classe2$number_of_distinct_orders[x]>= N_classes*5)
treino_valido <- TRUE
else treino_valido <- FALSE
}
#data[sup,] corresponde os que possuem rotulos (INICIALMENTE ROTULADOS OU NÃƒO)
if (treino_valido){
# if (nrow(data[new,])>=N_classes*5){
#o conjunto de treinamento serao as instancias incluÃ???das (rotuladas)
conj_treino <- data[id_conj_treino,]
id_conj_treino_antigo <- c()
#conj_treino <- data[new,]
}else if (length(conj_treino)>=1) {
#o conjunto de treinamento serÃ¡ o anterior + as instancias incluidas (rotuladas)
#conj_treino <- rbind(data[new,],conj_treino)
conj_treino <- rbind(data[id_conj_treino,],data[id_conj_treino_antigo,])
# id_conj_treino_antigo <- c(id_conj_treino_antigo,id_conj_treino)
cat("juntou", nrow(conj_treino), "\n")
}else break
if(k==1){
classificador <- naiveBayes(as.factor(class) ~ .,conj_treino)
matriz <- table(predict(classificador,base_rotulados_ini),base_rotulados_ini$class)
}
else{
#IMPLEMENTAR ARVORE DE DECISÃO
classificador <- rpartXse(as.factor(class) ~ .,conj_treino)
matriz <- table(predict(classificador,base_rotulados_ini, type="vector"),base_rotulados_ini$class)
}
acc_local <- ((sum(diag(matriz)) / length(base_rotulados_ini$class)) * 100)
if(acc_local>=50){
thrConf<-thrConf-0.05
}else{
thrConf<-thrConf+0.05
}
}
soma_Conf <- 0
qtd_Exemplos_Rot <- 0
model <- runLearner(learner,form,data[sup,])
probPreds <- do.call(predFunc,list(model,data[-sup,]))
function (X, MARGIN, FUN, ...)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
ddply(base_original,~class,summarise,number_of_distinct_orders=length(class))
?min
a <- ddply(base_original,~class,summarise,number_of_distinct_orders=length(class))
min(a$number_of_distinct_orders)
qtd_exem_por_classe <- ddply(base_original,~class,summarise,number_of_distinct_orders=length(class))
qtd_exem_menor_classe <- min(qtd_exem_por_classe$number_of_distinct_orders)
qtd_exem_menor_classe
?trunc
trunc(10.4)
qtd_exem_menor_classe <- trunc(min(qtd_exem_por_classe$number_of_distinct_orders)*0.1)
qtd_exem_menor_classe
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
qtd_exem_menor_classe
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
base_original$class
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
ab
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
teste1
teste2
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
teste1
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
teste1
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
teste1
teste2
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
source('C:/local_R/projeto_karliane/selftrain_modificado2/script_main.R', echo=TRUE)
